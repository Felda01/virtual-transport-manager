(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d229048"],{dc3f:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"209ca6e2-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Dashboard.vue?vue&type=template&id=f7e5fd10&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"md-layout text-center"},[_c(\'div\',{staticClass:"md-layout-item md-size-50 mb-5"},[_c(\'h1\',{staticClass:"md-display-1"},[_vm._v(_vm._s(_vm.$t(\'dashboard.title\')))]),_c(\'p\',{staticClass:"md-subheading"},[_vm._v(_vm._s(_vm.$t(\'dashboard.text\')))])]),_c(\'div\',{staticClass:"md-layout-item md-size-100"},[_c(\'div\',{staticClass:"md-layout"},[(_vm.firstLoad)?[_c(\'content-placeholders\',{staticClass:"md-layout-item md-size-50 md-medium-size-100"},[_c(\'content-placeholders-heading\'),_c(\'content-placeholders-text\',{attrs:{"lines":15}})],1),_c(\'content-placeholders\',{staticClass:"md-layout-item md-size-50 md-medium-size-100"},[_c(\'content-placeholders-heading\'),_c(\'content-placeholders-text\',{attrs:{"lines":15}})],1)]:[_c(\'div\',{staticClass:"md-layout-item md-size-50 md-medium-size-100"},[_c(\'chart-card\',{attrs:{"header-animation":"false","chart-data":_vm.orderCountChartData,"chart-options":_vm.orderCountChart.options,"chart-type":"Line","header-icon":"","chart-inside-content":"","no-footer":"","background-color":"green"}},[_c(\'template\',{slot:"chartInsideHeader"},[_c(\'div\',{staticClass:"card-icon"},[_c(\'md-icon\',[_vm._v("timeline")])],1),_c(\'h4\',{staticClass:"title"},[_vm._v(" "+_vm._s(_vm.$t(\'dashboard.orderCount\'))+" ")])])],2)],1),_c(\'div\',{staticClass:"md-layout-item md-size-50 md-medium-size-100"},[_c(\'chart-card\',{attrs:{"header-animation":"false","chart-data":_vm.orderSumChartData,"chart-options":_vm.orderSumChart.options,"chart-type":"Line","header-icon":"","chart-inside-content":"","no-footer":"","background-color":"green"}},[_c(\'template\',{slot:"chartInsideHeader"},[_c(\'div\',{staticClass:"card-icon"},[_c(\'md-icon\',[_vm._v("timeline")])],1),_c(\'h4\',{staticClass:"title"},[_vm._v(" "+_vm._s(_vm.$t(\'dashboard.orderSum\'))+" ")])])],2)],1)]],2)])])}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/views/user/Dashboard.vue?vue&type=template&id=f7e5fd10&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__("d81d");\n\n// EXTERNAL MODULE: ./src/graphql/queries/user.js\nvar user = __webpack_require__("74b2");\n\n// EXTERNAL MODULE: ./src/components/index.js + 158 modules\nvar components = __webpack_require__("2af9");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Dashboard.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var Dashboardvue_type_script_lang_js_ = ({\n  title: function title() {\n    return this.$t(\'pages.dashboard\');\n  },\n  name: "Dashboard",\n  data: function data() {\n    return {\n      dashboard: [],\n      orderCountChart: {\n        options: {\n          lineSmooth: this.$Chartist.Interpolation.cardinal({\n            tension: 10\n          }),\n          axisY: {\n            showGrid: true,\n            offset: 30\n          },\n          axisX: {\n            showGrid: false\n          },\n          low: 0,\n          high: 15,\n          showPoint: true,\n          height: "300px"\n        }\n      },\n      orderSumChart: {\n        options: {\n          lineSmooth: this.$Chartist.Interpolation.cardinal({\n            tension: 10\n          }),\n          axisY: {\n            showGrid: true,\n            offset: 30\n          },\n          axisX: {\n            showGrid: false\n          },\n          low: 0,\n          high: 20000,\n          showPoint: true,\n          height: "300px"\n        }\n      },\n      firstLoad: true,\n      orderCountData: null,\n      orderSumData: null\n    };\n  },\n  computed: {\n    orderCountChartData: function orderCountChartData() {\n      return this.orderCountData ? {\n        labels: this.orderCountData.map(function (p) {\n          return p.date;\n        }),\n        series: [this.orderCountData.map(function (p) {\n          return p.total;\n        })]\n      } : {\n        labels: [],\n        series: []\n      };\n    },\n    orderSumChartData: function orderSumChartData() {\n      return this.orderSumData ? {\n        labels: this.orderSumData.map(function (p) {\n          return p.date;\n        }),\n        series: [this.orderSumData.map(function (p) {\n          return p.price;\n        })]\n      } : {\n        labels: [],\n        series: []\n      };\n    }\n  },\n  components: {\n    ChartCard: components["b" /* ChartCard */]\n  },\n  apollo: {\n    dashboard: {\n      query: user["j" /* DASHBOARD_QUERY */],\n      result: function result(_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            networkStatus = _ref.networkStatus;\n        this.orderCountData = JSON.parse(data.dashboard[0]);\n        this.orderSumData = JSON.parse(data.dashboard[1]);\n\n        var maxCount = this._.maxBy(this.orderCountData, \'total\');\n\n        var maxSum = this._.maxBy(this.orderSumData, function (o) {\n          return parseInt(o.price);\n        });\n\n        this.orderCountChart.options.high = maxCount.total + 3;\n        this.orderSumChart.options.high = parseInt(maxSum.price) + 4000;\n        this.firstLoad = false;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/views/user/Dashboard.vue?vue&type=script&lang=js&\n /* harmony default export */ var user_Dashboardvue_type_script_lang_js_ = (Dashboardvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/views/user/Dashboard.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  user_Dashboardvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Dashboard = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///dc3f\n')}}]);