(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d225ba9"],{e646:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"2b04d427-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Trucks.vue?vue&type=template&id=0d83cb94&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"md-layout\"},[(_vm.$apollo.queries.trucks.loading && _vm.firstLoad)?[_c('content-placeholders',{staticClass:\"md-layout-item md-size-100\"},[_c('content-placeholders-heading'),_c('content-placeholders-text',{attrs:{\"lines\":2}})],1),_c('content-placeholders',{staticClass:\"md-layout-item md-size-100\"},[_c('content-placeholders-heading'),_c('content-placeholders-text',{attrs:{\"lines\":10}})],1)]:[_c('div',{staticClass:\"md-layout-item md-size-100 mb-3\"},[_c('search-form',{attrs:{\"search-schema\":_vm.searchSchema},model:{value:(_vm.searchModel),callback:function ($$v) {_vm.searchModel=$$v},expression:\"searchModel\"}})],1),(_vm.trucks.data && _vm.trucks.data.length > 0)?[_c('div',{staticClass:\"md-layout-item md-size-100\"},[_c('md-card',[_c('md-card-content',{staticClass:\"pb-0\"},[(_vm.trucks && _vm.trucks.data)?_c('md-table',{scopedSlots:_vm._u([{key:\"md-table-row\",fn:function(ref){\nvar item = ref.item;\nvar index = ref.index;\nreturn _c('md-table-row',{staticClass:\"cursor-pointer-hover\",nativeOn:{\"click\":function($event){return _vm.clickTableRow(item)}}},[_c('md-table-cell',{attrs:{\"md-label\":\"#\"}},[_vm._v(_vm._s(index + _vm.trucks.from))]),_c('md-table-cell',{attrs:{\"md-label\":\"\"}},[_c('div',{staticClass:\"img-container\"},[_c('img',{attrs:{\"src\":item.truckModel.image,\"alt\":item.truckModel.brand + ' ' +item.truckModel.name}})])]),_c('md-table-cell',{staticClass:\"td-name\",attrs:{\"md-label\":_vm.$t('truckModel.model')}},[_vm._v(_vm._s(item.truckModel.brand)+\" \"+_vm._s(item.truckModel.name))]),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('truck.property.status')}},[_vm._v(_vm._s(_vm.$t('status.' + item.status)))]),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('truck.property.garage')}},[_vm._v(_vm._s(item.garage.garageModel.name)+\" - \"+_vm._s(item.garage.location.name)+\" (\"+_vm._s(_vm._f(\"uppercase\")(item.garage.location.country.short_name))+\")\")]),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('truck.relations.drivers')}},[(item.drivers && item.drivers.length > 0)?[_vm._v(_vm._s(_vm.drivers(item.drivers)))]:[_vm._v(_vm._s(_vm.$t('truck.relations.no_drivers')))]],2),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('truck.relations.trailer')}},[(item.trailer)?[_vm._v(_vm._s(item.trailer.trailerModel.name))]:[_vm._v(_vm._s(_vm.$t('truck.relations.no_trailer')))]],2)],1)}}],null,false,3464978920),model:{value:(_vm.trucks.data),callback:function ($$v) {_vm.$set(_vm.trucks, \"data\", $$v)},expression:\"trucks.data\"}}):_vm._e()],1),_c('md-card-actions',{attrs:{\"md-alignment\":\"space-between\"}},[_c('div',{},[_c('p',{staticClass:\"card-category\"},[_vm._v(\" \"+_vm._s(_vm.$t('pagination.display', {from: _vm.trucks.from, to: _vm.trucks.to, total: _vm.trucks.total}))+\" \")])]),_c('pagination',{staticClass:\"pagination-no-border pagination-success\",attrs:{\"per-page\":_vm.trucks.per_page,\"total\":_vm.trucks.total},model:{value:(_vm.page),callback:function ($$v) {_vm.page=$$v},expression:\"page\"}})],1)],1)],1)]:[_c('div',{staticClass:\"md-layout-item md-size-100 mb-5\"},[_vm._v(\" \"+_vm._s(_vm.$t('search.noResults'))+\" \")])]]],2)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/views/user/Trucks.vue?vue&type=template&id=0d83cb94&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js\nvar es_array_join = __webpack_require__(\"a15b\");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(\"b0c0\");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\nvar createForOfIteratorHelper = __webpack_require__(\"b85c\");\n\n// EXTERNAL MODULE: ./src/graphql/queries/user.js\nvar user = __webpack_require__(\"74b2\");\n\n// EXTERNAL MODULE: ./src/graphql/queries/common.js\nvar common = __webpack_require__(\"fa11\");\n\n// EXTERNAL MODULE: ./src/components/index.js + 158 modules\nvar components = __webpack_require__(\"2af9\");\n\n// EXTERNAL MODULE: ./src/event-bus.js\nvar event_bus = __webpack_require__(\"81f6\");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Trucks.vue?vue&type=script&lang=js&\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var Trucksvue_type_script_lang_js_ = ({\n  title: function title() {\n    return this.$t('pages.trucks');\n  },\n  name: \"Trucks\",\n  components: {\n    Pagination: components[\"j\" /* Pagination */],\n    SearchForm: components[\"m\" /* SearchForm */]\n  },\n  data: function data() {\n    return {\n      trucks: {\n        data: [],\n        per_page: 10,\n        current_page: 1,\n        from: 0,\n        to: 0\n      },\n      page: 1,\n      firstLoad: true,\n      truckModelsOptions: [],\n      truckModels: [],\n      garagesOptions: [],\n      garages: [],\n      statuses: [],\n      statusesOptions: [],\n      searchModel: {\n        status: [],\n        truckModel: [],\n        garage: []\n      },\n      searchSchema: {\n        groups: [{\n          class: [''],\n          fields: [{\n            class: ['md-medium-size-50', 'md-xsmall-size-100', 'md-size-33'],\n            type: 'select',\n            input: 'select',\n            name: 'status',\n            label: this.$t('truck.property.status'),\n            value: [],\n            config: {\n              options: [],\n              optionValue: function optionValue(option) {\n                return option;\n              },\n              translatableLabel: 'status.',\n              optionLabel: function optionLabel(option) {\n                return option;\n              },\n              multiple: true\n            }\n          }, {\n            class: ['md-medium-size-50', 'md-xsmall-size-100', 'md-size-33'],\n            type: 'select',\n            input: 'select',\n            name: 'truckModel',\n            label: this.$t('truck.relations.truckModel'),\n            value: [],\n            config: {\n              options: [],\n              optionValue: function optionValue(option) {\n                return option.id;\n              },\n              groupBy: 'brand',\n              optgroupLabel: function optgroupLabel(optgroup) {\n                return optgroup.brand;\n              },\n              optionLabel: function optionLabel(option) {\n                return option.brand + ' ' + option.name;\n              },\n              multiple: true\n            }\n          }, {\n            class: ['md-medium-size-50', 'md-xsmall-size-100', 'md-size-33'],\n            type: 'select',\n            input: 'select',\n            name: 'garage',\n            label: this.$t('truck.property.garage'),\n            value: [],\n            config: {\n              options: [],\n              optionValue: function optionValue(option) {\n                return option.id;\n              },\n              groupBy: 'location.country.name',\n              optgroupLabel: function optgroupLabel(optgroup) {\n                return optgroup.location.country.name;\n              },\n              optionLabel: function optionLabel(option) {\n                return option.garageModel.name + ' - ' + option.location.name;\n              },\n              multiple: true\n            }\n          }]\n        }]\n      }\n    };\n  },\n  methods: {\n    drivers: function drivers(_drivers) {\n      var result = [];\n\n      var _iterator = Object(createForOfIteratorHelper[\"a\" /* default */])(_drivers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var driver = _step.value;\n          result.push(driver.first_name.charAt(0) + '. ' + driver.last_name);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result.join(', ');\n    },\n    clickTableRow: function clickTableRow(item) {\n      this.$router.push({\n        name: 'truck',\n        params: {\n          id: item.id\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    event_bus[\"a\" /* default */].$on('refreshQuery', function (payLoad) {\n      if (payLoad.modelType === 'Truck') {\n        this.$apollo.queries.trucks.refresh();\n      }\n\n      if (payLoad.modelType === 'Garage') {\n        this.$apollo.queries.garages.refresh();\n      }\n    });\n  },\n  apollo: {\n    trucks: {\n      query: user[\"z\" /* TRUCKS_QUERY */],\n      variables: function variables() {\n        return {\n          page: this.page,\n          limit: this.trucks.per_page,\n          filter: this.filters\n        };\n      },\n      result: function result(_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            networkStatus = _ref.networkStatus;\n        this.firstLoad = false;\n      }\n    },\n    statuses: {\n      query: common[\"j\" /* STATUSES_QUERY */],\n      variables: function variables() {\n        return {\n          model: 'truck'\n        };\n      },\n      result: function result(_ref2) {\n        var _this = this;\n\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            networkStatus = _ref2.networkStatus;\n        this.statusesOptions = data.statuses;\n        this.$nextTick(function () {\n          _this.$set(_this.searchSchema.groups[0].fields[0].config, 'options', _this.statusesOptions);\n        });\n      }\n    },\n    truckModels: {\n      query: common[\"q\" /* TRUCK_MODELS_SELECT_QUERY */],\n      variables: function variables() {\n        return {\n          page: 1,\n          limit: -1\n        };\n      },\n      result: function result(_ref3) {\n        var _this2 = this;\n\n        var data = _ref3.data,\n            loading = _ref3.loading,\n            networkStatus = _ref3.networkStatus;\n        this.truckModelsOptions = data.truckModels.data;\n        this.$nextTick(function () {\n          _this2.$set(_this2.searchSchema.groups[0].fields[1].config, 'options', _this2.truckModelsOptions);\n        });\n      }\n    },\n    garages: {\n      query: user[\"n\" /* GARAGES_SELECT_QUERY */],\n      variables: function variables() {\n        return {\n          page: 1,\n          limit: -1\n        };\n      },\n      result: function result(_ref4) {\n        var _this3 = this;\n\n        var data = _ref4.data,\n            loading = _ref4.loading,\n            networkStatus = _ref4.networkStatus;\n        this.garagesOptions = data.garages.data;\n        this.$nextTick(function () {\n          _this3.$set(_this3.searchSchema.groups[0].fields[2].config, 'options', _this3.garagesOptions);\n        });\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/views/user/Trucks.vue?vue&type=script&lang=js&\n /* harmony default export */ var user_Trucksvue_type_script_lang_js_ = (Trucksvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(\"2877\");\n\n// CONCATENATED MODULE: ./src/views/user/Trucks.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  user_Trucksvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d83cb94\",\n  null\n  \n)\n\n/* harmony default export */ var Trucks = __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///e646\n")}}]);