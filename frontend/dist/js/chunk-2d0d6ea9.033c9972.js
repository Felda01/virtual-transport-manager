(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d6ea9"],{"751f":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"209ca6e2-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Orders.vue?vue&type=template&id=5f24c1d5&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"md-layout"},[(_vm.$apollo.queries.orders.loading && _vm.firstLoad)?[_c(\'content-placeholders\',{staticClass:"md-layout-item md-size-100"},[_c(\'content-placeholders-heading\'),_c(\'content-placeholders-text\',{attrs:{"lines":2}})],1),_c(\'content-placeholders\',{staticClass:"md-layout-item md-size-100"},[_c(\'content-placeholders-heading\'),_c(\'content-placeholders-text\',{attrs:{"lines":15}})],1)]:[_c(\'div\',{staticClass:"md-layout-item md-size-100 mb-3"},[_c(\'search-form\',{attrs:{"search-schema":_vm.searchSchema},model:{value:(_vm.searchModel),callback:function ($$v) {_vm.searchModel=$$v},expression:"searchModel"}})],1),(_vm.orders.data && _vm.orders.data.length > 0)?[_c(\'div\',{staticClass:"md-layout-item md-size-100"},[_c(\'md-card\',[_c(\'md-card-content\',{staticClass:"pb-0"},[(_vm.orders && _vm.orders.data)?_c(\'md-table\',{scopedSlots:_vm._u([{key:"md-table-row",fn:function(ref){\nvar item = ref.item;\nvar index = ref.index;\nreturn _c(\'md-table-row\',{staticClass:"cursor-pointer-hover",nativeOn:{"click":function($event){return _vm.clickTableRow(item)}}},[_c(\'md-table-cell\',{attrs:{"md-label":"#"}},[_vm._v(_vm._s(index + _vm.orders.from))]),_c(\'md-table-cell\',{attrs:{"md-label":""}},[_c(\'div\',{staticClass:"img-container"},[_c(\'img\',{attrs:{"src":item.market.cargo.image,"alt":item.market.cargo.name}})])]),_c(\'md-table-cell\',{staticClass:"td-name",attrs:{"md-label":_vm.$t(\'order.relations.cargo_name\')}},[_vm._v(_vm._s(item.market.cargo.name))]),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.market_price\')}},[_vm._v(_vm._s(_vm._f("currency")(item.market.price,\' \', 2, { thousandsSeparator: \' \' }))+" "+_vm._s(_vm.$t(\'order.relations.market_priceUnit\')))]),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.roadTrip_status\')}},[_vm._v(_vm._s(_vm.$t(\'status.\' + item.roadTrip.status)))]),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.roadTrip_arrival\')}},[_vm._v(_vm._s(item.roadTrip.arrival))]),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'market.property.expires_at\')}},[_vm._v(_vm._s(item.market.expires_at))]),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.drivers\')}},[(item.drivers && item.drivers.length > 0)?[_vm._v(_vm._s(_vm.drivers(item.drivers)))]:[_vm._v(_vm._s(_vm.$t(\'order.relations.no_drivers\')))]],2),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.truck\')}},[(item.truck)?[_vm._v(_vm._s(item.truck.truckModel.brand)+" "+_vm._s(item.truck.truckModel.name))]:[_vm._v(_vm._s(_vm.$t(\'order.relations.no_truck\')))]],2),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.trailer\')}},[(item.trailer)?[_vm._v(_vm._s(item.trailer.trailerModel.name))]:[_vm._v(_vm._s(_vm.$t(\'order.relations.no_trailer\')))]],2),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.location_from\')}},[_vm._v(_vm._s(item.market.locationFrom.name)+" ("+_vm._s(_vm._f("uppercase")(item.market.locationFrom.country.short_name))+")")]),_c(\'md-table-cell\',{attrs:{"md-label":_vm.$t(\'order.relations.location_to\')}},[_vm._v(_vm._s(item.market.locationTo.name)+" ("+_vm._s(_vm._f("uppercase")(item.market.locationTo.country.short_name))+")")])],1)}}],null,false,1436666848),model:{value:(_vm.orders.data),callback:function ($$v) {_vm.$set(_vm.orders, "data", $$v)},expression:"orders.data"}}):_vm._e()],1),_c(\'md-card-actions\',{attrs:{"md-alignment":"space-between"}},[_c(\'div\',{},[_c(\'p\',{staticClass:"card-category"},[_vm._v(" "+_vm._s(_vm.$t(\'pagination.display\', {from: _vm.orders.from, to: _vm.orders.to, total: _vm.orders.total}))+" ")])]),_c(\'pagination\',{staticClass:"pagination-no-border pagination-success",attrs:{"per-page":_vm.orders.per_page,"total":_vm.orders.total},model:{value:(_vm.page),callback:function ($$v) {_vm.page=$$v},expression:"page"}})],1)],1)],1)]:[_c(\'div\',{staticClass:"md-layout-item md-size-100 mb-5"},[_vm._v(" "+_vm._s(_vm.$t(\'search.noResults\'))+" ")])]]],2)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/views/user/Orders.vue?vue&type=template&id=5f24c1d5&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js\nvar es_array_join = __webpack_require__("a15b");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\nvar createForOfIteratorHelper = __webpack_require__("b85c");\n\n// EXTERNAL MODULE: ./src/components/index.js + 158 modules\nvar components = __webpack_require__("2af9");\n\n// EXTERNAL MODULE: ./src/graphql/queries/user.js\nvar user = __webpack_require__("74b2");\n\n// EXTERNAL MODULE: ./src/graphql/queries/common.js\nvar common = __webpack_require__("fa11");\n\n// EXTERNAL MODULE: ./src/event-bus.js\nvar event_bus = __webpack_require__("81f6");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Orders.vue?vue&type=script&lang=js&\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var Ordersvue_type_script_lang_js_ = ({\n  title: function title() {\n    return this.$t(\'pages.orders\');\n  },\n  name: "Orders",\n  components: {\n    MutationModal: components["g" /* MutationModal */],\n    Pagination: components["j" /* Pagination */],\n    SearchForm: components["m" /* SearchForm */]\n  },\n  data: function data() {\n    return {\n      orders: {\n        data: [],\n        per_page: 10,\n        current_page: 1,\n        from: 0,\n        to: 0\n      },\n      page: 1,\n      firstLoad: true,\n      statusesOptions: [],\n      statuses: [],\n      searchModel: {\n        status: []\n      },\n      searchSchema: {\n        groups: [{\n          class: [\'\'],\n          fields: [{\n            class: [\'md-medium-size-50\', \'md-xsmall-size-100\', \'md-size-33\'],\n            type: \'select\',\n            input: \'select\',\n            name: \'status\',\n            label: this.$t(\'order.searchFields.status\'),\n            value: [],\n            config: {\n              options: [],\n              optionValue: function optionValue(option) {\n                return option;\n              },\n              translatableLabel: \'status.\',\n              optionLabel: function optionLabel(option) {\n                return option;\n              },\n              multiple: true\n            }\n          }]\n        }]\n      }\n    };\n  },\n  methods: {\n    clickTableRow: function clickTableRow(item) {\n      this.$router.push({\n        name: \'order\',\n        params: {\n          id: item.id\n        }\n      });\n    },\n    drivers: function drivers(_drivers) {\n      var result = [];\n\n      var _iterator = Object(createForOfIteratorHelper["a" /* default */])(_drivers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var driver = _step.value;\n          result.push(driver.first_name.charAt(0) + \'. \' + driver.last_name);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result.join(\', \');\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    event_bus["a" /* default */].$on(\'refreshQuery\', function (payLoad) {\n      if (payLoad.modelType === \'Order\') {\n        _this.$apollo.queries.orders.refresh();\n      }\n    });\n  },\n  apollo: {\n    orders: {\n      query: user["r" /* ORDERS_QUERY */],\n      variables: function variables() {\n        return {\n          page: this.page,\n          limit: this.orders.per_page,\n          filter: this.filters\n        };\n      },\n      result: function result(_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            networkStatus = _ref.networkStatus;\n        this.firstLoad = false;\n      }\n    },\n    statuses: {\n      query: common["j" /* STATUSES_QUERY */],\n      variables: function variables() {\n        return {\n          model: \'order\'\n        };\n      },\n      result: function result(_ref2) {\n        var _this2 = this;\n\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            networkStatus = _ref2.networkStatus;\n        this.statusesOptions = data.statuses;\n        this.$nextTick(function () {\n          _this2.$set(_this2.searchSchema.groups[0].fields[0].config, \'options\', _this2.statusesOptions);\n        });\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/views/user/Orders.vue?vue&type=script&lang=js&\n /* harmony default export */ var user_Ordersvue_type_script_lang_js_ = (Ordersvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/views/user/Orders.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  user_Ordersvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "5f24c1d5",\n  null\n  \n)\n\n/* harmony default export */ var Orders = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///751f\n')}}]);