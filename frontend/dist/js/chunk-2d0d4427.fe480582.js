(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d4427"],{"5fee":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"11b3ef6f-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Trailers.vue?vue&type=template&id=1dbcf550&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"md-layout\"},[(_vm.$apollo.queries.trailers.loading && _vm.firstLoad)?[_c('content-placeholders',{staticClass:\"md-layout-item md-size-100\"},[_c('content-placeholders-heading'),_c('content-placeholders-text',{attrs:{\"lines\":2}})],1),_c('content-placeholders',{staticClass:\"md-layout-item md-size-100\"},[_c('content-placeholders-heading'),_c('content-placeholders-text',{attrs:{\"lines\":10}})],1)]:[_c('div',{staticClass:\"md-layout-item md-size-100 mb-3\"},[_c('search-form',{attrs:{\"search-schema\":_vm.searchSchema},model:{value:(_vm.searchModel),callback:function ($$v) {_vm.searchModel=$$v},expression:\"searchModel\"}})],1),(_vm.trailers.data && _vm.trailers.data.length > 0)?[_c('div',{staticClass:\"md-layout-item md-size-100\"},[_c('md-card',[_c('md-card-content',{staticClass:\"pb-0\"},[(_vm.trailers && _vm.trailers.data)?_c('md-table',{scopedSlots:_vm._u([{key:\"md-table-row\",fn:function(ref){\nvar item = ref.item;\nvar index = ref.index;\nreturn _c('md-table-row',{staticClass:\"cursor-pointer-hover\",nativeOn:{\"click\":function($event){return _vm.clickTableRow(item)}}},[_c('md-table-cell',{attrs:{\"md-label\":\"#\"}},[_vm._v(_vm._s(index + _vm.trailers.from))]),_c('md-table-cell',{attrs:{\"md-label\":\"\"}},[_c('div',{staticClass:\"img-container\"},[_c('img',{attrs:{\"src\":item.trailerModel.image,\"alt\":item.trailerModel.name}})])]),_c('md-table-cell',{staticClass:\"td-name\",attrs:{\"md-label\":_vm.$t('trailer.relations.trailerModel')}},[_vm._v(_vm._s(item.trailerModel.name))]),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('trailer.property.status')}},[_vm._v(_vm._s(_vm.$t('status.' + item.status)))]),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('trailer.property.garage')}},[_vm._v(_vm._s(item.garage.garageModel.name)+\" - \"+_vm._s(item.garage.location.name)+\" (\"+_vm._s(_vm._f(\"uppercase\")(item.garage.location.country.short_name))+\")\")]),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('trailer.relations.truck')}},[(item.truck)?[_vm._v(_vm._s(item.truck.truckModel.brand)+\" \"+_vm._s(item.truck.truckModel.name))]:[_vm._v(_vm._s(_vm.$t('trailer.relations.no_truck')))]],2),_c('md-table-cell',{attrs:{\"md-label\":_vm.$t('trailer.property.adr')}},[_vm._v(_vm._s(_vm.$t('ADRs.' + item.trailerModel.adr)))])],1)}}],null,false,3834845021),model:{value:(_vm.trailers.data),callback:function ($$v) {_vm.$set(_vm.trailers, \"data\", $$v)},expression:\"trailers.data\"}}):_vm._e()],1),_c('md-card-actions',{attrs:{\"md-alignment\":\"space-between\"}},[_c('div',{},[_c('p',{staticClass:\"card-category\"},[_vm._v(\" \"+_vm._s(_vm.$t('pagination.display', {from: _vm.trailers.from, to: _vm.trailers.to, total: _vm.trailers.total}))+\" \")])]),_c('pagination',{staticClass:\"pagination-no-border pagination-success\",attrs:{\"per-page\":_vm.trailers.per_page,\"total\":_vm.trailers.total},model:{value:(_vm.page),callback:function ($$v) {_vm.page=$$v},expression:\"page\"}})],1)],1)],1)]:[_c('div',{staticClass:\"md-layout-item md-size-100 mb-5\"},[_vm._v(\" \"+_vm._s(_vm.$t('search.noResults'))+\" \")])]]],2)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/views/user/Trailers.vue?vue&type=template&id=1dbcf550&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(\"b0c0\");\n\n// EXTERNAL MODULE: ./src/graphql/queries/user.js\nvar user = __webpack_require__(\"74b2\");\n\n// EXTERNAL MODULE: ./src/graphql/queries/common.js\nvar common = __webpack_require__(\"fa11\");\n\n// EXTERNAL MODULE: ./src/components/index.js + 158 modules\nvar components = __webpack_require__(\"2af9\");\n\n// EXTERNAL MODULE: ./src/event-bus.js\nvar event_bus = __webpack_require__(\"81f6\");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/user/Trailers.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var Trailersvue_type_script_lang_js_ = ({\n  title: function title() {\n    return this.$t('pages.trailers');\n  },\n  name: \"Trailers\",\n  components: {\n    Pagination: components[\"j\" /* Pagination */],\n    SearchForm: components[\"m\" /* SearchForm */]\n  },\n  data: function data() {\n    return {\n      trailers: {\n        data: [],\n        per_page: 10,\n        current_page: 1,\n        from: 0,\n        to: 0\n      },\n      page: 1,\n      firstLoad: true,\n      trailerModelsOptions: [],\n      trailerModels: [],\n      garagesOptions: [],\n      garages: [],\n      statuses: [],\n      statusesOptions: [],\n      searchModel: {\n        status: [],\n        trailerModel: [],\n        garage: []\n      },\n      searchSchema: {\n        groups: [{\n          class: [''],\n          fields: [{\n            class: ['md-medium-size-50', 'md-xsmall-size-100', 'md-size-33'],\n            type: 'select',\n            input: 'select',\n            name: 'status',\n            label: this.$t('trailer.property.status'),\n            value: [],\n            config: {\n              options: [],\n              optionValue: function optionValue(option) {\n                return option;\n              },\n              translatableLabel: 'status.',\n              optionLabel: function optionLabel(option) {\n                return option;\n              },\n              multiple: true\n            }\n          }, {\n            class: ['md-medium-size-50', 'md-xsmall-size-100', 'md-size-33'],\n            type: 'select',\n            input: 'select',\n            name: 'trailerModel',\n            label: this.$t('trailer.relations.trailerModel'),\n            value: [],\n            config: {\n              options: [],\n              optionValue: function optionValue(option) {\n                return option.id;\n              },\n              groupBy: 'type',\n              optgroupLabel: function optgroupLabel(optgroup) {\n                return optgroup.type;\n              },\n              optionLabel: function optionLabel(option) {\n                return option.name;\n              },\n              multiple: true\n            }\n          }, {\n            class: ['md-medium-size-50', 'md-xsmall-size-100', 'md-size-33'],\n            type: 'select',\n            input: 'select',\n            name: 'garage',\n            label: this.$t('trailer.property.garage'),\n            value: [],\n            config: {\n              options: [],\n              optionValue: function optionValue(option) {\n                return option.id;\n              },\n              groupBy: 'location.country.name',\n              optgroupLabel: function optgroupLabel(optgroup) {\n                return optgroup.location.country.name;\n              },\n              optionLabel: function optionLabel(option) {\n                return option.garageModel.name + ' - ' + option.location.name;\n              },\n              multiple: true\n            }\n          }]\n        }]\n      }\n    };\n  },\n  methods: {\n    clickTableRow: function clickTableRow(item) {\n      this.$router.push({\n        name: 'trailer',\n        params: {\n          id: item.id\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    event_bus[\"a\" /* default */].$on('refreshQuery', function (payLoad) {\n      if (payLoad.modelType === 'Trailer') {\n        this.$apollo.queries.trailers.refresh();\n      }\n\n      if (payLoad.modelType === 'Garage') {\n        this.$apollo.queries.garages.refresh();\n      }\n    });\n  },\n  apollo: {\n    trailers: {\n      query: user[\"v\" /* TRAILERS_QUERY */],\n      variables: function variables() {\n        return {\n          page: this.page,\n          limit: this.trailers.per_page,\n          filter: this.filters\n        };\n      },\n      result: function result(_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            networkStatus = _ref.networkStatus;\n        this.firstLoad = false;\n      }\n    },\n    statuses: {\n      query: common[\"j\" /* STATUSES_QUERY */],\n      variables: function variables() {\n        return {\n          model: 'trailer'\n        };\n      },\n      result: function result(_ref2) {\n        var _this = this;\n\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            networkStatus = _ref2.networkStatus;\n        this.statusesOptions = data.statuses;\n        this.$nextTick(function () {\n          _this.$set(_this.searchSchema.groups[0].fields[0].config, 'options', _this.statusesOptions);\n        });\n      }\n    },\n    trailerModels: {\n      query: common[\"l\" /* TRAILER_MODELS_SELECT_QUERY */],\n      variables: function variables() {\n        return {\n          page: 1,\n          limit: -1\n        };\n      },\n      result: function result(_ref3) {\n        var _this2 = this;\n\n        var data = _ref3.data,\n            loading = _ref3.loading,\n            networkStatus = _ref3.networkStatus;\n        this.trailerModelsOptions = data.trailerModels.data;\n        this.$nextTick(function () {\n          _this2.$set(_this2.searchSchema.groups[0].fields[1].config, 'options', _this2.trailerModelsOptions);\n        });\n      }\n    },\n    garages: {\n      query: user[\"n\" /* GARAGES_SELECT_QUERY */],\n      variables: function variables() {\n        return {\n          page: 1,\n          limit: -1\n        };\n      },\n      result: function result(_ref4) {\n        var _this3 = this;\n\n        var data = _ref4.data,\n            loading = _ref4.loading,\n            networkStatus = _ref4.networkStatus;\n        this.garagesOptions = data.garages.data;\n        this.$nextTick(function () {\n          _this3.$set(_this3.searchSchema.groups[0].fields[2].config, 'options', _this3.garagesOptions);\n        });\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/views/user/Trailers.vue?vue&type=script&lang=js&\n /* harmony default export */ var user_Trailersvue_type_script_lang_js_ = (Trailersvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(\"2877\");\n\n// CONCATENATED MODULE: ./src/views/user/Trailers.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  user_Trailersvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1dbcf550\",\n  null\n  \n)\n\n/* harmony default export */ var Trailers = __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5fee\n")}}]);